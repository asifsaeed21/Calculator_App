import 'package:flutter/material.dart';
import 'package:uidsign/components/componnents.dart';
import 'package:uidsign/constants.dart';
import 'package:math_expressions/math_expressions.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  var userInput = '';
  var answer = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xffd4edda), // Light Greenish Background
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 10),
          child: Column(
            children: [
              /// ✅ Display Section
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.symmetric(vertical: 20),
                  child: Align(
                    alignment: Alignment.bottomRight,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.end,
                      crossAxisAlignment: CrossAxisAlignment.end,
                      children: [
                        Text(
                          userInput.toString(),
                          style: const TextStyle(
                            fontSize: 30,
                            color: Color(0xff155724), // Dark Green Text
                          ),
                        ),
                        const SizedBox(height: 15),
                        Text(
                          answer.toString(),
                          style: const TextStyle(
                            fontSize: 30,
                            color: Color(0xff1b4332), // Deep Green Answer
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),

              /// ✅ Buttons Section with Updated Colors
              Expanded(
                flex: 2,
                child: Column(
                  children: [
                    Row(
                      children: [
                        MyButton(title: 'AC', color: const Color(0xffd32f2f), onPress: () { userInput = ''; answer = ''; setState(() {}); }),
                        MyButton(title: '+/-', color: const Color(0xff28a745), onPress: () { userInput += '+/-'; setState(() {}); }),
                        MyButton(title: '%', color: const Color(0xff28a745), onPress: () { userInput += '%'; setState(() {}); }),
                        MyButton(title: '/', color: const Color(0xff28a745), onPress: () { userInput += '/'; setState(() {}); }),
                      ],
                    ),
                    Row(
                      children: [
                        MyButton(title: '7', color: Colors.white, onPress: () { updateUserInput('7'); }),
                        MyButton(title: '8', color: Colors.white, onPress: () { updateUserInput('8'); }),
                        MyButton(title: '9', color: Colors.white, onPress: () { updateUserInput('9'); }),
                        MyButton(title: 'X', color: const Color(0xff28a745), onPress: () { userInput += 'X'; setState(() {}); }),
                      ],
                    ),
                    Row(
                      children: [
                        MyButton(title: '4', color: Colors.white, onPress: () { updateUserInput('4'); }),
                        MyButton(title: '5', color: Colors.white, onPress: () { updateUserInput('5'); }),
                        MyButton(title: '6', color: Colors.white, onPress: () { updateUserInput('6'); }),
                        MyButton(title: '-', color: const Color(0xff28a745), onPress: () { userInput += '-'; setState(() {}); }),
                      ],
                    ),
                    Row(
                      children: [
                        MyButton(title: '1', color: Colors.white, onPress: () { updateUserInput('1'); }),
                        MyButton(title: '2', color: Colors.white, onPress: () { updateUserInput('2'); }),
                        MyButton(title: '3', color: Colors.white, onPress: () { updateUserInput('3'); }),
                        MyButton(title: '+', color: const Color(0xff28a745), onPress: () { userInput += '+'; setState(() {}); }),
                      ],
                    ),
                    Row(
                      children: [
                        MyButton(title: '0', color: Colors.white, onPress: () { updateUserInput('0'); }),
                        MyButton(title: '.', color: Colors.white, onPress: () { updateUserInput('.'); }),
                        MyButton(title: 'DEL', color: const Color(0xffd32f2f), onPress: () {
                          if (userInput.isNotEmpty) {
                            userInput = userInput.substring(0, userInput.length - 1);
                            setState(() {});
                          }
                        }),
                        MyButton(title: '=', color: const Color(0xff28a745), onPress: () { equalPres(); setState(() {}); }),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  /// ✅ Helper Function to Update User Input
  void updateUserInput(String value) {
    userInput += value;
    setState(() {});
  }

  /// ✅ Calculation Logic
  void equalPres() {
    String finalUserInput = userInput.replaceAll('X', '*');
    Parser p = Parser();
    Expression expression = p.parse(finalUserInput);
    ContextModel contextModel = ContextModel();
    double eval = expression.evaluate(EvaluationType.REAL, contextModel);
    answer = eval.toString();
  }
}
